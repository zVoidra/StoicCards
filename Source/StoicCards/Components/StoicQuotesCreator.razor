@page "/create"

@inject IJSRuntime jsRuntime

@using StoicCards.Components.Models
@using StoicCards.Components.Utilities;

<div class="">
  <div class="">
    <h2>Quote</h2>
    <input 
      @bind="quoteInput" 
      @onkeyup="OnKeyUp" 
      placeholder="Enter the quote..." />
    <h2>Author</h2>
    <input 
      @bind="quoteAuthor" 
      @onkeyup="OnKeyUp" 
      placeholder="Enter the author..." />
    <button @onclick="AddToList">Save</button>
    <button @onclick="SaveAsXml">Save To File</button>
  </div>
  <div>
    @foreach (StoicQuoteModel quote in stoicQuotes)
    {
      <p>@quote.Quote</p>
      <p>@quote.Author</p>
    }
  </div>
</div>

@code {
  private string quoteInput;
  private string quoteAuthor;

  private List<StoicQuoteModel> stoicQuotes = new List<StoicQuoteModel>();

  public void AddToList() => stoicQuotes.Add(new StoicQuoteModel(quoteInput, quoteAuthor));

  public void OnKeyUp(KeyboardEventArgs e)
  {
    if (e.Key == "Enter")
    {
      AddToList();
    }
  }

  public async Task SaveAsXml()
  {
    string doc = XmlFileManager.GenerateXml(stoicQuotes);
    await jsRuntime.InvokeVoidAsync("saveFile", "stoic_quotes.xml", doc);
  }
}